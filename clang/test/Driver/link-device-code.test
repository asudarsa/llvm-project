# RUN: llvm-as %S/Inputs/test1.ll -o %t.test1.bc
# RUN: llvm-as %S/Inputs/test2.ll -o %t.test2.bc
# RUN: llvm-as %S/Inputs/test3.ll -o %t.test3.bc
# RUN: llvm-as %S/Inputs/libsycl.ll -o %t.libsycl.bc
# RUN: clang-sycl-linker %t.test1.bc %t.test2.bc -triple spirv64 -o test.spv --print-linked-module 2>&1 | FileCheck %s --check-prefix=CHECK-SIMPLE

# RUN: not clang-sycl-linker %t.test2.bc %t.test3.bc -triple spirv64 -o test.spv --print-linked-module 2>&1 | FileCheck %s --check-prefix=CHECK-MULTIPLE-DEFS

# RUN: clang-sycl-linker %t.test1.bc %t.test2.bc -device-libs=%t.libsycl.bc -library-path= -triple spirv64 -o test.spv --print-linked-module 2>&1 | FileCheck %s --check-prefix=CHECK-DEVICE-LIB

; CHECK-SIMPLE: define {{.*}}foo_func1{{.*}}
; CHECK-SIMPLE: define {{.*}}foo_func2{{.*}}
; CHECK-SIMPLE: define {{.*}}bar_func1{{.*}}
; CHECK-SIMPLE: define {{.*}}bar_func2{{.*}}

;CHECK-MULTIPLE-DEFS: error: Linking globals named {{.*}}bar_func1{{.*}} symbol multiply defined!

; CHECK-DEVICE-LIB: define {{.*}}foo_func1{{.*}}
; CHECK-DEVICE-LIB: define {{.*}}foo_func2{{.*}}
; CHECK-DEVICE-LIB: define {{.*}}bar_func1{{.*}}
; CHECK-DEVICE-LIB: define {{.*}}bar_func2{{.*}}

